//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAcces
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Configuration;
    using System.Linq;
    using System.Web.Mvc;

    public partial class Clanky1
    {
        public int Id { get; set; }
        public string Autor { get; set; }
        [AllowHtml]
        [ConfigurationPropertyAttribute("requestValidationMode", DefaultValue = "2.0")]
        public string Text { get; set; }
        public string Datum { get; set; }
  
        public string Nazev { get; set; }


        public static Clanky1 vyberZDb(int id)
        {
            Clanky1 clZdb = new Clanky1();
            clZdb = null;
            using (StrankyEntities context = new StrankyEntities())
            {
                try
                {
                    clZdb = context.Clanky1.FirstOrDefault(c => c.Id == id);
                }
                catch
                {
                    return null;
                }
            }
            return clZdb;
        }

        
        public static void pridejDoDB(Clanky1 cl)
        {
            using (StrankyEntities context = new StrankyEntities())
            {
                context.Clanky1.Add(cl);
                context.SaveChanges();
            }

        }

        public static int pocetVDB()
        {
            int pocet = 0;
            using (StrankyEntities context = new StrankyEntities())
            {
                pocet = context.Clanky1.Count();
            }
            return pocet;
        }
        public static void odeberZDB(int id)
        {

            using (StrankyEntities context = new StrankyEntities())
            {
                Clanky1 clZdb = new Clanky1();
                clZdb = context.Clanky1.FirstOrDefault(c => c.Id == id);
                context.Clanky1.Remove(clZdb);
                context.SaveChanges();
            }

        }
        public static List<Clanky1> VseZDB()
        {
            List<Clanky1> database = new List<Clanky1>();
  
            using (StrankyEntities context = new StrankyEntities())
            {


                int i = 1, pocetnalzeu = 0;
                int pocetDB = context.Clanky1.Count();

                Clanky1 clZdb = new Clanky1();
                while (pocetnalzeu != pocetDB)
                {

                    clZdb = context.Clanky1.FirstOrDefault(c => c.Id == i);
                    if (clZdb != null)
                    {
                        pocetnalzeu++;
                        Clanky1 newclanek = new Clanky1();
                        database.Add(newclanek=clZdb); //fix
                    }
                    i++;
                }

            }
            return database;
        }

        public static void update(Clanky1 cl)
        {
            using (StrankyEntities context = new StrankyEntities())
            {
                Clanky1 clZdb = new Clanky1();
                clZdb = context.Clanky1.FirstOrDefault(c => c.Id == cl.Id);
                clZdb.Nazev = cl.Nazev;
                clZdb.Text = cl.Text;
                context.SaveChanges();
            }

        }



    }
}
